#version 420
#extension GL_ARB_texture_gather : enable
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_packing : enable
// shader d92fe9087a495dcb
uniform ivec4 uf_remappedVS[86];
uniform vec2 uf_windowSpaceToClipSpaceTransform;
uniform float uf_alphaTestRef;
layout(binding = 42) uniform sampler2D textureUnitVS10;// Tex10 addr 0x1cb21000 res 2048x2048x1 dim 1 tm: 4 format 081e compSel: 0 1 4 5 mipView: 0x0 (num 0x1) sliceView: 0x0 (num 0x1) Sampler28 ClampX/Y/Z: 2 2 2 border: 1
layout(binding = 43) uniform sampler2DArrayShadow textureUnitVS11;// Tex11 addr 0xf494a800 res 1024x1024x2 dim 5 tm: 4 format 0005 compSel: 0 4 4 5 mipView: 0x0 (num 0x1) sliceView: 0x0 (num 0x2) Sampler29 ClampX/Y/Z: 6 6 6 border: 2
layout(binding = 44) uniform sampler1DShadow textureUnitVS12;layout(binding = 45) uniform sampler2D textureUnitVS13;// Tex13 addr 0x39084000 res 1024x1024x1 dim 1 tm: 4 format 0035 compSel: 0 0 0 1 mipView: 0x0 (num 0xb) sliceView: 0x0 (num 0x1) Sampler31 ClampX/Y/Z: 0 0 0 border: 1
layout(location = 0) in uvec4 attrDataSem0;
layout(location = 1) in uvec4 attrDataSem1;
layout(location = 2) in uvec4 attrDataSem2;
layout(location = 3) in uvec4 attrDataSem3;
layout(location = 4) in uvec4 attrDataSem4;
layout(location = 5) in uvec4 attrDataSem5;
layout(location = 6) in uvec4 attrDataSem6;
layout(location = 7) in uvec4 attrDataSem7;
layout(location = 8) in uvec4 attrDataSem8;
out gl_PerVertex
{
	vec4 gl_Position;
	float gl_PointSize;
};
layout(location = 0) out vec4 passParameterSem0;
layout(location = 1) out vec4 passParameterSem1;
layout(location = 2) out vec4 passParameterSem3;
layout(location = 3) out vec4 passParameterSem4;
layout(location = 4) out vec4 passParameterSem5;
layout(location = 5) out vec4 passParameterSem8;
layout(location = 6) out vec4 passParameterSem11;
int clampFI32(int v)
{
if( v == 0x7FFFFFFF )
	return floatBitsToInt(1.0);
else if( v == 0xFFFFFFFF )
	return floatBitsToInt(0.0);
return floatBitsToInt(clamp(intBitsToFloat(v), 0.0, 1.0));
}
float mul_nonIEEE(float a, float b){ if( a == 0.0 || b == 0.0 ) return 0.0; return a*b; }
void main()
{

}
