#version 420
#extension GL_ARB_texture_gather : enable
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_packing : enable
// shader acdc2cc298f22eed
uniform ivec4 uf_remappedVS[37];
uniform vec2 uf_windowSpaceToClipSpaceTransform;
layout(location = 0) in uvec4 attrDataSem0;
layout(location = 1) in uvec4 attrDataSem1;
layout(location = 2) in uvec4 attrDataSem2;
layout(location = 3) in uvec4 attrDataSem8;
layout(location = 4) in uvec4 attrDataSem9;
layout(location = 5) in uvec4 attrDataSem12;
out gl_PerVertex
{
	vec4 gl_Position;
	float gl_PointSize;
};
layout(location = 2) out vec4 passParameterSem2;
layout(location = 6) out vec4 passParameterSem5;
layout(location = 7) out vec4 passParameterSem6;
layout(location = 8) out vec4 passParameterSem8;
layout(location = 1) out vec4 passParameterSem1;
layout(location = 5) out vec4 passParameterSem7;
layout(location = 3) out vec4 passParameterSem3;
layout(location = 4) out vec4 passParameterSem4;
layout(location = 9) out vec4 passParameterSem9;
layout(location = 0) out vec4 passParameterSem0;
int clampFI32(int v)
{
if( v == 0x7FFFFFFF )
	return floatBitsToInt(1.0);
else if( v == 0xFFFFFFFF )
	return floatBitsToInt(0.0);
return floatBitsToInt(clamp(intBitsToFloat(v), 0.0, 1.0));
}
float mul_nonIEEE(float a, float b){ if( a == 0.0 || b == 0.0 ) return 0.0; return a*b; }
void main()
{

}
